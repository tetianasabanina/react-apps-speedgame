{"version":3,"sources":["Components/Circle/Circle.js","Components/PopUpWindow/PopUpWindow.js","Components/SpeedSelection/SpeedSelection.js","App.js","index.js"],"names":["Circle","props","className","active","style","backgroundColor","buttonColor","onClick","click","PopUpWindow","text","SpeedSelection","buttons","name","label","onSpeedSelect","this","map","type","key","Component","App","state","showPopUp","score","counter","current","speed","game","timer","undefined","pace","console","log","setState","next","min","max","nextActive","Math","floor","random","stopHandler","setTimeout","clickHandler","buttonClicked","startHandler","clearTimeout","PopUpWindowHandler","window","location","reload","stateLine","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7e26b42b.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Circle.css';\r\n//import Cursor from '../../img/cat_paw.jpg';\r\nconst Circle = (props) =>  {\r\n    \r\n    return (\r\n            <div className={'circle' + (props.active ? ' active':'')} style={{backgroundColor: props.active ? props.active : props.buttonColor}} onClick={props.click}>\r\n               \r\n            </div>\r\n    );\r\n}\r\n\r\nexport default Circle;","import React from 'react';\r\nimport './PopUpWindow.css';\r\n\r\n/*const closeHandler =() => {\r\n    window.location.reload();\r\n} */\r\nconst PopUpWindow = (props) =>  {\r\n    \r\n    return (\r\n            <div className='gameOver'>\r\n                <div className='popUpBox'>\r\n                    <button className=\"popUpBox_button\" onClick={props.click}>X</button>\r\n                    <p className=\"popUpBox-text\">{props.text}</p>\r\n                </div>\r\n            </div>\r\n    );\r\n}\r\n\r\nexport default PopUpWindow;","import React, {Component} from 'react';\r\nimport './SpeedSelection.css';\r\n\r\nclass SpeedSelection extends Component  {\r\n\r\n    buttons = [\r\n        { name: 'slow', label: 'SLOW'},\r\n        { name: 'fast', label: 'FAST'},\r\n    ];\r\n\r\n    render() {\r\n        const { onSpeedSelect } = this.props;\r\n        const buttons = this.buttons.map(({name, label}) =>  {\r\n            return (\r\n                <button type=\"button\" \r\n                key={name} \r\n                className=\"speedButton\"\r\n                onClick={() => onSpeedSelect(label)}>\r\n                    {label}\r\n                </button>\r\n            );\r\n        });\r\n        return (\r\n            <div className=\"speedSelectionSection\" >\r\n                <span>Select speed: </span>\r\n                {buttons}\r\n            </div>\r\n \r\n        );\r\n    };\r\n}\r\n\r\nexport default SpeedSelection;","import React, {Component} from 'react';\r\nimport './App.css';\r\nimport Circle from './Components/Circle/Circle';\r\nimport PopUpWindow from './Components/PopUpWindow/PopUpWindow';\r\nimport SpeedSelection from './Components/SpeedSelection/SpeedSelection';\r\n\r\nfunction getRandomInt(min, max) {\r\n  return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n\r\nclass App extends Component {\r\n    \r\n  state = {\r\n    showPopUp: false,\r\n    score: 0,\r\n    counter: 0,\r\n    current: 0,\r\n    speed: 0,\r\n    game: 'off',\r\n  }\r\n\r\n  timer = undefined;\r\n  pace = 0;\r\n  text = \"\";\r\n  \r\n  onSpeedSelect = (speed) => {\r\n    console.log(\"speed \", speed);\r\n    this.setState({speed})\r\n    switch (speed) {\r\n      case ('SLOW'):\r\n        this.pace = 3000;\r\n        break;\r\n      case ('FAST'):\r\n        this.pace = 1500;\r\n        break;\r\n      default:\r\n        console.log(\"pace is undefined\");\r\n    }\r\n    console.log(\"pace \", this.pace);\r\n    \r\n  }\r\n\r\n  next=()=>{\r\n    \r\n    console.log(\"next\");\r\n    console.log(\"counter\" , this.state.counter);\r\n    let nextActive = undefined; // method inside component, needs variable\r\n    \r\n    do {nextActive = getRandomInt(1,4);\r\n    } while (nextActive === this.state.current);\r\n    \r\n    this.setState({current: nextActive, counter: this.state.counter+1});\r\n    console.log(\"counter +\" , this.state.counter);\r\n    \r\n    if (this.state.counter > 5) {\r\n      this.stopHandler();\r\n      return;\r\n    }\r\n    this.pace *= 0.95;  \r\n    this.timer = setTimeout(this.next, this.pace); //if it is not an \"arrow\" function,  \"bind\", \r\n\r\n    // console.log(\"current\", this.state.current);\r\n    \r\n  }\r\n  \r\n  clickHandler = (buttonClicked) => {\r\n    console.log(\"click\");\r\n    console.log(\"counter\" , this.state.counter);\r\n    if (this.state.game === 'on') {\r\n      \r\n      console.log(\"button clicked \" + buttonClicked);\r\n      if (buttonClicked !== this.state.current) {\r\n        this.stopHandler();\r\n        return;\r\n      }\r\n      this.setState ({score: this.state.score +1, counter: 0});\r\n    }\r\n  }\r\n  \r\n  startHandler = () => {\r\n    console.log(\"start\");\r\n    console.log(\"counter\" , this.state.counter);\r\n    console.log(\"speed\" , this.state.speed);\r\n    if (this.state.speed !== 0) {\r\n    this.setState({game: 'on'});\r\n    this.next();\r\n    } else {\r\n      this.text = \"Select speed first!\";\r\n      this.setState({ showPopUp: true });\r\n    }\r\n  } \r\n\r\n  stopHandler = () => {\r\n    if ( this.state.game === 'on') {\r\n      console.log(\"stop\");\r\n      console.log(\"counter\" , this.state.counter);\r\n      clearTimeout(this.timer);\r\n      this.text = \"Game over! \\n You've caught \" + this.state.score + ' mice';\r\n      this.setState({ showPopUp: true, score: 0, counter: 0, current:0, speed: 0});\r\n    }\r\n  }\r\n\r\n  PopUpWindowHandler = () => {\r\n    console.log(\"popup\");\r\n    console.log(\"counter\" , this.state.counter);\r\n    window.location.reload();\r\n  }\r\n  \r\n  \r\n  render () {\r\n\r\n    const { speed } = this.state;\r\n\r\n    const Score = () => {\r\n      return (\r\n    <div className='score'>\r\n      Speed: {this.state.speed} -> Score : {this.state.score}\r\n      </div>\r\n      );\r\n    }\r\n\r\n    const stateLine = (speed===0) ? <SpeedSelection onSpeedSelect={this.onSpeedSelect} /> : <Score />;\r\n    \r\n    return (\r\n      <div>\r\n        {this.state.showPopUp && <PopUpWindow click={this.PopUpWindowHandler} text= {this.text} score={this.state.score}/>}\r\n        <h1>Cat & Mouse</h1>\r\n        {stateLine}\r\n        <div className=\"circles\">\r\n          <Circle buttonColor=\"#D3B1FA\" active={this.state.current===1} click={()=>this.clickHandler(1)} />\r\n          <Circle buttonColor=\"#00C9AA\" active={this.state.current===2} click={()=>this.clickHandler(2)} />\r\n          <Circle buttonColor=\"#FFFADE\" active={this.state.current===3} click={()=>this.clickHandler(3)} />\r\n          <Circle buttonColor=\"#2380A0\" active={this.state.current===4} click={()=>this.clickHandler(4)} />\r\n        </div>  \r\n        <div className='buttons'>\r\n          <button className=\"start\" onClick={this.startHandler}>Start</button>\r\n          <button className=\"stop\" onClick={this.stopHandler}>Stop</button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}